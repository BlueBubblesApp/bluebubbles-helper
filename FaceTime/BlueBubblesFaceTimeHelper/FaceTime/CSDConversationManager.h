//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/Foundation.h>

@class CPActivityAuthorizationManager, CPActivitySuggestions, CPApplicationController, CPSystemStateObserver, CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDDeviceLockStateObserver, CSDIDSService, CSDPendingMembershipTracker, CSDReportingController, CSDScreenSharingActivityManager, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, NSDictionary, NSMapTable, NSMutableDictionary, NSSet, NSString, TUCallProviderManager;
@protocol CSDConduitIDSProxy, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDIDSService *_service;    // 8 = 0x8
    CSDPendingMembershipTracker *_pendingMembershipTracker;    // 16 = 0x10
    NSMutableDictionary *_mutableConversationsByUUID;    // 24 = 0x18
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;    // 32 = 0x20
    NSMutableDictionary *_mutablePseudonymsByCallUUID;    // 40 = 0x28
    NSMutableDictionary *_mutablePseudonymsByRequestIdentifiers;    // 48 = 0x30
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;    // 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;    // 64 = 0x40
    NSMapTable *_delegateToQueue;    // 72 = 0x48
    NSMapTable *_observerToQueue;    // 80 = 0x50
    CPActivitySuggestions *_cpActivitySuggestions;    // 88 = 0x58
    CSDScreenSharingActivityManager *_screenSharingActivityManager;    // 96 = 0x60
    CPSystemStateObserver *_sharePlaySystemStateObserver;    // 104 = 0x68
    CSDSecureImageTranscoder *_imageTranscoder;    // 112 = 0x70
    CSDConversationPersistenceController *_persistenceController;    // 120 = 0x78
    CSDDeviceLockStateObserver *_lockStateObserver;    // 128 = 0x80
    TUCallProviderManager *_callProviderManager;    // 136 = 0x88
    CSDConversationLinkManager *_linkManager;    // 144 = 0x90
    CSDReportingController *_reportingController;    // 152 = 0x98
    id <TUFeatureFlags> _featureFlags;    // 160 = 0xa0
    CSDConversationNoticeManager *_conversationNoticeManger;    // 168 = 0xa8
    CSDSharedConversationServerBag *_serverBag;    // 176 = 0xb0
    NSObject<OS_dispatch_queue> *_queue;    // 184 = 0xb8
    FTDeviceSupport *_deviceSupport; // 232 = 0xe8
    CPApplicationController *_cpApplicationController;    // 240 = 0xf0
    CPActivityAuthorizationManager *_activityAuthorizationManager;    // 248 = 0xf8
    id <CSDConduitIDSProxy> _messageProxy;    // 256 = 0x100
}

@property(nonatomic) __weak id <CSDConduitIDSProxy> messageProxy; // @synthesize messageProxy=_messageProxy;
@property(retain, nonatomic) CPActivityAuthorizationManager *activityAuthorizationManager; // @synthesize activityAuthorizationManager=_activityAuthorizationManager;
@property(readonly, nonatomic) CPApplicationController *cpApplicationController; // @synthesize cpApplicationController=_cpApplicationController;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
// Error: Property attributes should begin with the type ('T') attribute, property name: screenSharingActivityManager
// Property attributes: (null)

@property(retain, nonatomic) CPActivitySuggestions *cpActivitySuggestions; // @synthesize cpActivitySuggestions=_cpActivitySuggestions;
@property(retain, nonatomic) NSMapTable *observerToQueue; // @synthesize observerToQueue=_observerToQueue;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pendingConversationCleanupTimer; // @synthesize pendingConversationCleanupTimer=_pendingConversationCleanupTimer;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
@property(retain, nonatomic) CSDIDSService *service; // @synthesize service=_service;
- (void)systemStateObserver:(id)arg1 screenSharingAllowedStateChanged:(_Bool)arg2;    // IMP=0x0010000000112108
- (void)systemStateObserver:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;    // IMP=0x0010000000111bfa
- (void)applicationPolicyManager:(id)arg1 authorizationChangedForBundleIdentifier:(id)arg2;    // IMP=0x0010000000111930
- (void)screenSharingActivityManager:(id)arg1 invalidatedSessionWithReason:(id)arg2 wasLocallySharing:(_Bool)arg3;    // IMP=0x0010000000111524
- (void)screenSharingActivityManager:(id)arg1 receivedUpdatedRemoteAttributes:(id)arg2 isLocallySharing:(_Bool)arg3;    // IMP=0x001000000011139b
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;    // IMP=0x0010000000110c3f
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;    // IMP=0x0010000000110a6a
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;    // IMP=0x00100000001108ce
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;    // IMP=0x0010000000110671
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;    // IMP=0x00100000001104e9
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;    // IMP=0x00100000001101c2
- (void)handleRemovedLinkDescriptors:(id)arg1;    // IMP=0x001000000010ffe3
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;    // IMP=0x001000000010fe7e
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;    // IMP=0x001000000010fd19
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;    // IMP=0x001000000010fbb4
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;    // IMP=0x001000000010fa4f
- (id)pickInitiatorFromParticipants:(id)arg1 forUpdate:(id)arg2;    // IMP=0x001000000010f6bb
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;    // IMP=0x001000000010ee01
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;    // IMP=0x001000000010ea4e
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3;    // IMP=0x001000000010e877
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4;    // IMP=0x001000000010b7a4
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;    // IMP=0x001000000010b35f
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;    // IMP=0x001000000010ae7f
- (id)pushTokenForSelf;    // IMP=0x001000000010ae28
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2;    // IMP=0x001000000010a9ac
- (void)processGroupSessionParticipantUpdate:(id)arg1;    // IMP=0x001000000010a228
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;    // IMP=0x001000000010a147
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3;    // IMP=0x001000000010a066
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;    // IMP=0x00100000001087ea
- (void)processProxiedGroupUpdate:(id)arg1;    // IMP=0x0010000000108776
- (void)processProxiedResource:(id)arg1 metadata:(id)arg2 fromID:(id)arg3 context:(id)arg4;    // IMP=0x00100000001086bb
- (void)processProxiedMessage:(id)arg1 fromID:(id)arg2 context:(id)arg3;    // IMP=0x00100000001085ff
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;    // IMP=0x0010000000108386
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;    // IMP=0x0010000000107f2c
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;    // IMP=0x0010000000107bd5
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;    // IMP=0x0010000000107a9a
- (void)service:(id)arg1 account:(id)arg2 messageIdentifier:(id)arg3 alternateCallbackID:(id)arg4 updatedWithResponseCode:(long long)arg5 error:(id)arg6 lastCall:(_Bool)arg7 messageContext:(id)arg8;    // IMP=0x0010000000107a20
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;    // IMP=0x0010000000107871
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;    // IMP=0x0010000000107729
- (void)conversation:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;    // IMP=0x0010000000107389
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;    // IMP=0x0010000000107078
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;    // IMP=0x0010000000106be4
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;    // IMP=0x00100000001067e9
- (void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;    // IMP=0x0010000000106452
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;    // IMP=0x0010000000106208
- (void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedVideoEnabled:(_Bool)arg3;    // IMP=0x0010000000105eaa
- (void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedAudioEnabled:(_Bool)arg3;    // IMP=0x0010000000105b4c
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;    // IMP=0x00100000001057d9
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;    // IMP=0x001000000010549f
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;    // IMP=0x0010000000105309
- (void)conversation:(id)arg1 requestAVCBlobForParticipantDestination:(id)arg2 completion:(id)arg3;    // IMP=0x0010000000105151
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;    // IMP=0x0010000000104ddb
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;    // IMP=0x0010000000104a5f
- (void)conversation:(id)arg1 updatedActiveParticipant:(id)arg2;    // IMP=0x0010000000104705
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2;    // IMP=0x001000000010431f
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;    // IMP=0x0010000000103f39
- (void)conversationInvalidated:(id)arg1;    // IMP=0x0010000000103bb8
- (void)conversationConnectionDidStart:(id)arg1;    // IMP=0x0010000000103ac0
- (void)conversationChanged:(id)arg1;    // IMP=0x0010000000103488
- (void)cleanupExpiredPendingConversations;    // IMP=0x0010000000103029
- (void)setupPendingConversationCleanupTimer;    // IMP=0x0010000000102d45
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x0010000000102a30
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;    // IMP=0x00100000001027ad
- (void)removeConversationWithUUID:(id)arg1;    // IMP=0x001000000010253c
- (void)removeNonIndefiniteLinks;    // IMP=0x0010000000101ef5
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x0010000000101c4a
- (void)removeConversationNoticeWithUUID:(id)arg1;    // IMP=0x0010000000101b48
- (void)fetchUpcomingNoticeWithCompletionHandler:(id)arg1;    // IMP=0x00100000001018f7
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;    // IMP=0x0010000000101422
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;    // IMP=0x0010000000101136
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;    // IMP=0x0010000000100e37
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(id)arg2;    // IMP=0x0010000000100c79
- (void)recoverLinksForPseudonyms:(id)arg1;    // IMP=0x0010000000100ada
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;    // IMP=0x001000000010095c
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(id)arg3;    // IMP=0x00100000001003e5
- (void)activateLink:(id)arg1 completionHandler:(id)arg2;    // IMP=0x0010000000100138
- (void)getInactiveLinkWithCompletionHandler:(id)arg1;    // IMP=0x00100000000ffda6
- (void)generateAllInactiveLinks;    // IMP=0x00100000000ffc26
- (void)checkLinkValidity:(id)arg1 completionHandler:(id)arg2;    // IMP=0x00100000000ffa98
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(id)arg4;    // IMP=0x00100000000ff50e
- (void)invalidateLink:(id)arg1 completionHandler:(id)arg2;    // IMP=0x00100000000fefe1
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(id)arg3;    // IMP=0x00100000000fe9cb
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(id)arg3;    // IMP=0x00100000000fde54
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(id)arg3;    // IMP=0x00100000000fdc42
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;    // IMP=0x00100000000fd980
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(id)arg2;    // IMP=0x00100000000fcf36
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(id)arg2;    // IMP=0x00100000000fcb7d
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(id)arg1;    // IMP=0x00100000000fc9e1
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;    // IMP=0x00100000000fc5a6
- (void)setVideoEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversationUUID:(id)arg3;    // IMP=0x00100000000fc2f3
- (void)setAudioEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversationUUID:(id)arg3;    // IMP=0x00100000000fc040
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;    // IMP=0x00100000000fbdb8
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;    // IMP=0x00100000000fb9ba
- (void)processScreenShareRequestFromParticipant:(id)arg1 conversationUUID:(id)arg2;    // IMP=0x00100000000fb5b5
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;    // IMP=0x00100000000fae38
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;    // IMP=0x00100000000fab47
- (void)requestScreenShareFromMember:(id)arg1 conversationUUID:(id)arg2;    // IMP=0x00100000000faa7d
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;    // IMP=0x00100000000fa504
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x00100000000fa259
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000f9ba3
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000f9a30
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000f8bde
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000f877b
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000f83c3
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;    // IMP=0x00100000000f8242
- (void)requestActivityAuthorizationForApplicationWithBundleIdentifier:(id)arg1 completionHandler:(id)arg2;    // IMP=0x00100000000f813d
- (void)launchApplicationForActivitySessionUUID:(id)arg1 forceBackground:(_Bool)arg2 completionHandler:(id)arg3;    // IMP=0x00100000000f7212
- (void)launchApplicationForActivitySessionUUID:(id)arg1 completionHandler:(id)arg2;    // IMP=0x00100000000f71fb
- (void)setAutoSharePlayEnabled:(_Bool)arg1;    // IMP=0x00100000000f70f9
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;    // IMP=0x00100000000f6ffe
- (void)removeActivitySuggestionsForBundleID:(id)arg1;    // IMP=0x00100000000f6c5c
- (void)removeActivitySuggestion:(id)arg1;    // IMP=0x00100000000f6825
- (void)addActivitySuggestion:(id)arg1;    // IMP=0x00100000000f63ee
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3;    // IMP=0x00100000000f611a
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x00100000000f5e6f
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x00100000000f5bb7
- (void)createActivitySession:(id)arg1 onConversationWithUUID:(id)arg2 withCompletion:(id)arg3;    // IMP=0x00100000000f5435
- (id)createCPActivitySessionForActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x00100000000f5018
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;    // IMP=0x00100000000f4b05
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;    // IMP=0x00100000000f45f9
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;    // IMP=0x00100000000f42d3
- (void)displaySharePlayUnableToStartAlert;    // IMP=0x00100000000f41e2
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;    // IMP=0x00100000000f378b
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;    // IMP=0x00100000000f305d
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2fcb
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2d1e
- (void)setScreenShareAttributes:(id)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2b91
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2a59
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2907
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f27d0
- (int)presentationStateForConversationWithUUID:(id)arg1;    // IMP=0x00100000000f263d
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;    // IMP=0x00100000000f24ad
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2375
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f223d
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f2105
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;    // IMP=0x00100000000f1e36
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f1db5
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;    // IMP=0x00100000000f1917
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;    // IMP=0x00100000000f1479
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f1341
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;    // IMP=0x00100000000f1047
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f0f0f
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;    // IMP=0x00100000000f0dd7
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;    // IMP=0x00100000000f0cd5
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;    // IMP=0x00100000000f0ba2
- (void)leaveAllConversations;    // IMP=0x00100000000f09d8
- (void)leaveConversationWithUUID:(id)arg1;    // IMP=0x00100000000f08b2
- (void)startAudioForConversationWithUUID:(id)arg1;    // IMP=0x00100000000f0645
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;    // IMP=0x00100000000efebc
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;    // IMP=0x00100000000ef999
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(id)arg5;    // IMP=0x00100000000ef1f3
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;    // IMP=0x00100000000ee515
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;    // IMP=0x00100000000ede87
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;    // IMP=0x00100000000ed86a
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 video:(_Bool)arg9 conversationProvider:(id)arg10;    // IMP=0x00100000000ecb18
- (void)removeAllConversations;    // IMP=0x00100000000ecadb
- (void)retreiveActiveConversations;    // IMP=0x00100000000ec101
- (void)beginListeningOnService:(id)arg1;    // IMP=0x00100000000ebf3d
- (void)addObserver:(id)arg1 queue:(id)arg2;    // IMP=0x00100000000ebe0c
- (void)removeDelegate:(id)arg1;    // IMP=0x00100000000ebd09
- (void)addDelegate:(id)arg1 queue:(id)arg2;    // IMP=0x00100000000ebbd8
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
@property(readonly, copy, nonatomic) NSSet *activatedConversationLinks;
@property(readonly, copy, nonatomic) NSSet *activitySuggestions;
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;    // IMP=0x00100000000eb35c
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;    // IMP=0x00100000000eac51
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;    // IMP=0x00100000000ea35f
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;    // IMP=0x00100000000e9e8a
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;    // IMP=0x00100000000e9cf9
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;    // IMP=0x00100000000e9886
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;    // IMP=0x00100000000e9582
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;    // IMP=0x00100000000e903f
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;    // IMP=0x00100000000e8f3a
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;    // IMP=0x00100000000e8b9d
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;    // IMP=0x00100000000e8881
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;    // IMP=0x00100000000e8286
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;    // IMP=0x00100000000e8010
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;    // IMP=0x00100000000e7b73
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;    // IMP=0x00100000000e77c7
- (id)memberExistsForHandle:(id)arg1 members:(id)arg2;    // IMP=0x00100000000e760c
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;    // IMP=0x00100000000e72a7
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;    // IMP=0x00100000000e69c6
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;    // IMP=0x00100000000e69b1
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;    // IMP=0x00100000000e63aa
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;    // IMP=0x00100000000e5cad
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;    // IMP=0x00100000000e5c98
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;    // IMP=0x00100000000e5ae9
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;    // IMP=0x00100000000e597c
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3;    // IMP=0x00100000000e5967
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;    // IMP=0x00100000000e58b1
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;    // IMP=0x00100000000e5890
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(id)arg7;    // IMP=0x00100000000e528d
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;    // IMP=0x00100000000e4e23
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;    // IMP=0x00100000000e426d
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;    // IMP=0x00100000000e39c8
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;    // IMP=0x00100000000e328a
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;    // IMP=0x00100000000e22eb
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000e1bd5
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4;    // IMP=0x00100000000e097d
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;    // IMP=0x00100000000e02ab
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;    // IMP=0x00100000000dfd26
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;    // IMP=0x00100000000dfb73
- (id)createActivitySession:(id)arg1 onConversation:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000df9dd
- (id)temporaryFilePath;    // IMP=0x00100000000df961
- (_Bool)_linksEnabled;    // IMP=0x00100000000df911
- (void)postEndEventForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;    // IMP=0x00100000000df728
- (void)postSessionStartedForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;    // IMP=0x00100000000df53f
- (void)handleConversation:(id)arg1 receivedAVCBlobResponse:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000df2d4
- (void)handleConversation:(id)arg1 receivedAVCBlobRequest:(id)arg2 fromHandle:(id)arg3;    // IMP=0x00100000000deff9
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;    // IMP=0x00100000000ded23
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;    // IMP=0x00100000000dea4d
- (void)notifyDelegatesOfRemoteScreenShareEndedWithReason:(id)arg1;    // IMP=0x00100000000de771
- (void)notifyDelegatesOfRemoteScreenShareAttributes:(id)arg1 isLocallySharing:(_Bool)arg2;    // IMP=0x00100000000de477
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;    // IMP=0x00100000000ddf4b
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;    // IMP=0x00100000000dde47
- (void)notifyDelegatesOfUpdatePendingConversations;    // IMP=0x00100000000ddb74
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;    // IMP=0x00100000000dd876
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;    // IMP=0x00100000000dd5d5
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;    // IMP=0x00100000000dd299
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;    // IMP=0x00100000000dce63
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;    // IMP=0x00100000000dc9fb
- (id)transitionConversationWithUUID:(id)arg1 toNewGroupUUID:(id)arg2 remoteMembers:(id)arg3 localMember:(id)arg4 lightweightMembers:(id)arg5 fromHandle:(id)arg6;    // IMP=0x00100000000dc016
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 video:(_Bool)arg13 provider:(id)arg14;    // IMP=0x00100000000dbc5b
- (id)conversationLinkForGroupUUID:(id)arg1;    // IMP=0x00100000000dba38
- (id)conversationLinkForPseudonym:(id)arg1;    // IMP=0x00100000000db8b9
- (id)findConversationLinkMatchingPseudonym:(id)arg1;    // IMP=0x00100000000db696
- (id)pendingConversationWithPseudonym:(id)arg1;    // IMP=0x00100000000db434
- (id)activeApprovedConversationWithLink:(id)arg1;    // IMP=0x00100000000db097
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;    // IMP=0x00100000000dad3d
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;    // IMP=0x00000000000daadd
- (id)conversationWithGroupUUID:(id)arg1;    // IMP=0x00100000000da8ba
- (id)activeConversation;    // IMP=0x00100000000da712
- (void)removeAllPendingConversations;    // IMP=0x00100000000da660
- (id)removePendingConversationWithPseudonym:(id)arg1;    // IMP=0x00100000000da415
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;    // IMP=0x00100000000d9ffb
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 video:(_Bool)arg16 provider:(id)arg17;    // IMP=0x00100000000d9350
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1;    // IMP=0x00100000000d9126
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;    // IMP=0x00100000000d8efc
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;    // IMP=0x00100000000d8e12
- (_Bool)isHandleLocalPseudonym:(id)arg1;    // IMP=0x00100000000d8dbc
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2;    // IMP=0x00100000000d8d59
- (_Bool)isValidLocalHandle:(id)arg1;    // IMP=0x00100000000d8cc5
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 featureFlags:(id)arg6;    // IMP=0x00100000000d7634
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 featureFlags:(id)arg5;    // IMP=0x00100000000d754d
- (id)init;    // IMP=0x00100000000d7522
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2;    // IMP=0x00100000000d7428

// Remaining properties
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end
